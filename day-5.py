#How to deploy smart contract to the blockchain using python and ganache, the smart contract is on Remix
import json
from web3 import Web3

ganache_url = "http://127.0.0.1:7545"
web3 = Web3(Web3.HTTPProvider(ganache_url))

print(web3.isConnected())

#gets ths first account on ganache and set is at the address we will be deploy from.
web3.eth.defaultAccount = web3.eth.accounts[0]   

abi = json.loads('[{"constant":false,"inputs":[],"name":"GreeterClass","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_greeting","type":"string"}],"name":"setGreeting","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"greeting","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}]')

#go down to Bytecode(I recommend cos thats what I used here) or runtime bytecode, then copy the object. Bytecode needed to deploy the smart contract.
bytecode = '6060604052341561000f57600080fd5b61047f8061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063158dad951461005e578063a413686214610073578063cfae3217146100d0578063ef690cc01461015e57600080fd5b341561006957600080fd5b6100716101ec565b005b341561007e57600080fd5b6100ce600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061023a565b005b34156100db57600080fd5b6100e3610254565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610123578082015181840152602081019050610108565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016957600080fd5b6101716102fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b1578082015181840152602081019050610196565b50505050905090810190601f1680156101de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6040805190810160405280600581526020017f48656c6c6f0000000000000000000000000000000000000000000000000000008152506000908051906020019061023792919061039a565b50565b806000908051906020019061025092919061039a565b5050565b61025c61041a565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b5050505050905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103925780601f1061036757610100808354040283529160200191610392565b820191906000526020600020905b81548152906001019060200180831161037557829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103db57805160ff1916838001178555610409565b82800160010185558215610409579182015b828111156104085782518255916020019190600101906103ed565b5b509050610416919061042e565b5090565b602060405190810160405280600081525090565b61045091905b8082111561044c576000816000905550600101610434565b5090565b905600a165627a7a7230582073b69c07b400f75364e206b93e5c2b132f85b2b254405e1533884b31b68824ad0029'
Greeter = web3.eth.contract(abi=abi, bytecode=bytecode)

tx_hash = Greeter.constructor().transact()

tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
print(tx_receipt)

#smart contract 
contract = web3.eth.contract(
    address = tx_receipt.contractAddress,
    abi = abi
)

#now lets call function in the smart contract
print(contract.functions.greet().call())

#to update the message in the greet function
tx_hash = contract.functions.setGreeting("Welcome").transact()
tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
print(contract.functions.greet().call())

